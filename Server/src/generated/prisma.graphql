type AggregateUser {
  count: Int!
}

type BatchPayload {
  count: Long!
}

scalar DateTime

scalar Long

type Mutation {
  createUser(data: UserCreateInput!): User!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  deleteUser(where: UserWhereUniqueInput!): User
  deleteManyUsers(where: UserWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Query {
  user(where: UserWhereUniqueInput!): User
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  node(id: ID!): Node
}

type Subscription {
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
}

type User {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  userAccountName: String!
  userPassword: String!
  userFirstName: String!
  userName: String!
  userPseudonym: String!
  userBirthDate: DateTime
  userDescription: String
}

type UserConnection {
  pageInfo: PageInfo!
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  id: ID
  userAccountName: String!
  userPassword: String!
  userFirstName: String!
  userName: String!
  userPseudonym: String!
  userBirthDate: DateTime
  userDescription: String
}

type UserEdge {
  node: User!
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  userAccountName_ASC
  userAccountName_DESC
  userPassword_ASC
  userPassword_DESC
  userFirstName_ASC
  userFirstName_DESC
  userName_ASC
  userName_DESC
  userPseudonym_ASC
  userPseudonym_DESC
  userBirthDate_ASC
  userBirthDate_DESC
  userDescription_ASC
  userDescription_DESC
}

type UserPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  userAccountName: String!
  userPassword: String!
  userFirstName: String!
  userName: String!
  userPseudonym: String!
  userBirthDate: DateTime
  userDescription: String
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: UserWhereInput
  AND: [UserSubscriptionWhereInput!]
  OR: [UserSubscriptionWhereInput!]
  NOT: [UserSubscriptionWhereInput!]
}

input UserUpdateInput {
  userAccountName: String
  userPassword: String
  userFirstName: String
  userName: String
  userPseudonym: String
  userBirthDate: DateTime
  userDescription: String
}

input UserUpdateManyMutationInput {
  userAccountName: String
  userPassword: String
  userFirstName: String
  userName: String
  userPseudonym: String
  userBirthDate: DateTime
  userDescription: String
}

input UserWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  userAccountName: String
  userAccountName_not: String
  userAccountName_in: [String!]
  userAccountName_not_in: [String!]
  userAccountName_lt: String
  userAccountName_lte: String
  userAccountName_gt: String
  userAccountName_gte: String
  userAccountName_contains: String
  userAccountName_not_contains: String
  userAccountName_starts_with: String
  userAccountName_not_starts_with: String
  userAccountName_ends_with: String
  userAccountName_not_ends_with: String
  userPassword: String
  userPassword_not: String
  userPassword_in: [String!]
  userPassword_not_in: [String!]
  userPassword_lt: String
  userPassword_lte: String
  userPassword_gt: String
  userPassword_gte: String
  userPassword_contains: String
  userPassword_not_contains: String
  userPassword_starts_with: String
  userPassword_not_starts_with: String
  userPassword_ends_with: String
  userPassword_not_ends_with: String
  userFirstName: String
  userFirstName_not: String
  userFirstName_in: [String!]
  userFirstName_not_in: [String!]
  userFirstName_lt: String
  userFirstName_lte: String
  userFirstName_gt: String
  userFirstName_gte: String
  userFirstName_contains: String
  userFirstName_not_contains: String
  userFirstName_starts_with: String
  userFirstName_not_starts_with: String
  userFirstName_ends_with: String
  userFirstName_not_ends_with: String
  userName: String
  userName_not: String
  userName_in: [String!]
  userName_not_in: [String!]
  userName_lt: String
  userName_lte: String
  userName_gt: String
  userName_gte: String
  userName_contains: String
  userName_not_contains: String
  userName_starts_with: String
  userName_not_starts_with: String
  userName_ends_with: String
  userName_not_ends_with: String
  userPseudonym: String
  userPseudonym_not: String
  userPseudonym_in: [String!]
  userPseudonym_not_in: [String!]
  userPseudonym_lt: String
  userPseudonym_lte: String
  userPseudonym_gt: String
  userPseudonym_gte: String
  userPseudonym_contains: String
  userPseudonym_not_contains: String
  userPseudonym_starts_with: String
  userPseudonym_not_starts_with: String
  userPseudonym_ends_with: String
  userPseudonym_not_ends_with: String
  userBirthDate: DateTime
  userBirthDate_not: DateTime
  userBirthDate_in: [DateTime!]
  userBirthDate_not_in: [DateTime!]
  userBirthDate_lt: DateTime
  userBirthDate_lte: DateTime
  userBirthDate_gt: DateTime
  userBirthDate_gte: DateTime
  userDescription: String
  userDescription_not: String
  userDescription_in: [String!]
  userDescription_not_in: [String!]
  userDescription_lt: String
  userDescription_lte: String
  userDescription_gt: String
  userDescription_gte: String
  userDescription_contains: String
  userDescription_not_contains: String
  userDescription_starts_with: String
  userDescription_not_starts_with: String
  userDescription_ends_with: String
  userDescription_not_ends_with: String
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
}

input UserWhereUniqueInput {
  id: ID
}
